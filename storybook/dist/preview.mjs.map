{"version":3,"sources":["../src/preview.ts"],"names":[],"mappings":";AAEA,SAAS,cAAe;AAGxB,SAAS,sBAAsB;AAE3B,SAAO,OAAO;AAClB;AAMO,IAAM,aAAa;AAAA,EACtB,CAAC,SAAkC,YAAoC;AACrE,UAAM,EAAE,SAAS,CAAC,EAAE,IAAI,QAAQ;AAEhC,QAAI,OAAO,QAAQ,QAAW;AAC1B,aAAO,MAAM,GAAG,oBAAoB,EAAE,QAAQ,MAAM;AAAA,IACxD;AAEA,YAAQ,WAAW,SAAS;AAE5B,WAAO,QAAQ;AAAA,EACjB;AACJ","sourcesContent":["import type { Renderer } from \"@storybook/types\";\nimport { PartialStoryFn as StoryFunction, StoryContext } from '@storybook/types';\nimport { global }  from '@storybook/global'\nimport { FrameworkOptions } from './types';\n\nfunction getFrameworkOptions() {\n    // @ts-ignore\n    return global.FRAMEWORK_OPTIONS as FrameworkOptions;\n}\n\n\n/**\n * Decorator to set server URL\n */\nexport const decorators = [\n    (StoryFn: StoryFunction<Renderer>, context: StoryContext<Renderer>) => {\n      const { server = {} } = context.parameters;\n\n      if (server.url === undefined) {\n          server.url = `${getFrameworkOptions().symfony.server}/_storybook/render`;\n      }\n\n      context.parameters.server = server;\n\n      return StoryFn();\n    }\n];\n"]}