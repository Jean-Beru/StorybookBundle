{"version":3,"sources":["../../src/builders/webpack5-builder.ts"],"names":["baseStart","createProxyMiddleware","build","bail","getConfig","corePresets","overridePresets","start","options","isProd","symfony","paths","path"],"mappings":"AACA,OAAS,SAASA,MAAiB,8BACnC,OAAS,yBAAAC,MAA6B,wBAEtC,OAAS,SAAAC,EAAO,QAAAC,EAAM,aAAAC,EAAW,eAAAC,EAAa,mBAAAC,MAAuB,8BAE9D,IAAMC,EAA0B,MAAOC,GAAY,CACxD,IAAMC,EAASD,EAAQ,QAAQ,aAAe,aAExC,CAAE,QAAAE,CAAQ,EAAI,MAAMF,EAAQ,QAAQ,QAAQ,MAAiC,kBAAkB,EAErG,GAAIE,EAAQ,WAAY,CACtB,IAAMC,EAAS,MAAM,QAAQD,EAAQ,UAAU,EAA2BA,EAAQ,WAA/B,CAACA,EAAQ,UAAU,EACtE,QAASE,KAAQD,EACfH,EAAQ,OAAO,IAAII,EAAMX,EAAsB,CAC7C,OAAQS,EAAQ,OAChB,aAAc,GACd,OAAQD,CACV,CAAC,CAAC,CAEN,CAEA,OAAOT,EAAUQ,CAAO,CAC1B","sourcesContent":["import { SymfonyOptions } from '../types';\nimport { start as baseStart } from \"@storybook/builder-webpack5\";\nimport { createProxyMiddleware } from 'http-proxy-middleware';\n\nexport { build, bail, getConfig, corePresets, overridePresets } from \"@storybook/builder-webpack5\";\n\nexport const start: typeof baseStart = async (options) => {\n  const isProd = options.options.configType === 'PRODUCTION';\n\n  const { symfony } = await options.options.presets.apply<{symfony: SymfonyOptions}>('frameworkOptions');\n\n  if (symfony.proxyPaths) {\n    const paths = !Array.isArray(symfony.proxyPaths) ? [symfony.proxyPaths] : symfony.proxyPaths;\n    for (let path of paths) {\n      options.router.use(path, createProxyMiddleware({\n        target: symfony.server,\n        changeOrigin: true,\n        secure: isProd\n      }));\n    }\n  }\n\n  return baseStart(options);\n}\n"]}